name: Automatic publish
on:
  push:
    branches:
      - 'main'
      - 'master'

jobs:
  update_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Generate Next SemVer"
        id: version
        uses: bencatlab/autobashed-semver@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          bump-tag: 'false'          # Bump tag to Git repository
          file-update: 'true'       # Updates file with new semver and add change to last commit
          file-path: 'library.json' # Path to the file to update
          major: 'BREAKING'  # Keyword for MAJOR
          minor: 'feat'          # Keyword for MINOR
          prefix: 'v'               # Set a prefix to your tag
          enable-snapshot: 'false'   # Generate as SNAPSHOT instead of RELEASE
          snapshot-suffix: 'SNAPSHOT'   # Suffix for SNAPSHOT versioning (e.g. 1.0.1-beta.1)

      - name: "Output SemVer from previous Step"
        run: echo "${{ steps.version.outputs.semver }}"

      - name: "Update README.md badge"
        # [![Version](https://badgen.net/badge/version/1.2.3/informational)](https://github.com/your-username/your-repo/actions)
        run: |
          NEW_BADGE="[![Version](https://img.shields.io/badge/version-${{ steps.version.outputs.semver }}-informational)](https://github.com/arsenier/argviz/actions/workflows/auto-semver.yml)"
          sed -i '1s#.*#'"${NEW_BADGE}"'#' README.md

      - name: "Commit changes"
        run: |
          git add README.md
          git pull > /dev/null 2>&1
          git commit --amend --no-edit > /dev/null 2>&1
          git push origin -f > /dev/null 2>&1

      - name: "Bump tag"
        run: |
          tag_semver=${{ steps.version.outputs.semver }}
          tag_message=$(git log -1 --pretty=%B)
          git tag -a "${tag_semver}" -m "${tag_message}"
          git push origin "${tag_semver}" >/dev/null 2>&1

  publish:
    needs: update_version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install PlatformIO Core
        run: pip install platformio

      - name: Publish Package to PlatformIO Registry
        run: pio pkg publish --non-interactive
        env:
          PLATFORMIO_AUTH_TOKEN: ${{ secrets.PLATFORMIO_AUTH_TOKEN }}
